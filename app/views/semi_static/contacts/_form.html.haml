- content_for :header_css do
  :plain
    .cff{display:none;}

- if @contact.errors.any?
  #error_explanation.errors
    %h2= "#{pluralize(@contact.errors.count, "error")} prohibited this contact from being saved:"
    %ul
      - @contact.errors.full_messages.each do |msg|
        %li= msg

= form_for @contact do |f|
  - if @reason
    = hidden_field_tag 'contact[reason]', @reason.to_s
  
  - if SemiStatic::Engine.config.contact_form_spam_fields
    -# We put fake fields here and then hide them with CSS. Spam bots don't look at the CSS so they
    -# will not know that they are fake. Thus if we find that the fields are filled in, we know
    -# that the form was filled in by a spambot and we can reject it.
    .cff
      %fieldset
        = label :message, 'Message'
        = text_area_tag 'message[message]', nil, :size => "12x16"
        %br/
        %br/
        = label :message, 'homepage'
        = url_field :message, :homepage

  .section.group
    .col.span_1_of_2
      = f.text_field :name, :size => 51
      = f.label :name, t('Name')
    .col.span_1_of_2
      = f.text_field :surname, :size => 51
      = f.label :surname, t('Surname')
  .section.group
    .col.span_1_of_2
      = f.text_field :email, :type => :email, :pattern => '^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$', :required => true, :size => 51
      = f.label :email, t('Email')
    .col.span_1_of_2
      = f.text_field :telephone, :size => 51
      = f.label :telephone, t('Telephone')
  .section.group
    .col.span_1_of_1.text-box
      = f.text_area :message, { :value => (@message ? t(@message) : ""), :rows => "8", :cols => "36"}
      = f.label :message, t('Message')
    %br/
  %fieldset#semiStaticAgreements
    - @contact.agreements.each do |agreement|
      = check_box_tag :agreement_ids, agreement.id, agreement.ticked_by_default, {:name => "contact[agreement_ids][]"}.merge(agreement.required ? {:required => true} : {})
      = agreement.body.html_safe
      %br/
  .actions
    = f.submit t('Send')
