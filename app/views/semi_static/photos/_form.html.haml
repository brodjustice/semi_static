- content_for :ujs do
  :javascript
    function check_entry_link(){
      if($('#photo_entry_id').val() == '') {
        $('#entry_gallery_position').hide();
      } else {
        $('#entry_gallery_position').show();
      }
    }

    $(document).ready(function() {
      semi_static_file_name_input = $('#photo_title');
      $("#photo_img").on('change', semiStaticPrepareUploadFromInput);
      check_entry_link();
      $("#photo_entry_id").on('change', check_entry_link);
    });

= form_for @photo do |f|
  - if @photo.errors.any?
    #error_explanation
      %h2= "#{pluralize(@photo.errors.count, "error")} prohibited this photo from being saved:"
      %ul
        - @photo.errors.full_messages.each do |msg|
          %li= msg

  .row
    .col-md-8
      .tile
        .tile-body
          = labeled_textfield(f, :title)
          .infobox#loaded_image
            %h4 Currently loaded image
            - if @photo.img.present?
              The currently loaded mage is:
              %ul
                %li= @photo.img_file_name
                %li= 'Type: ' + @photo.img_content_type
                %li= link_to @photo.img.url, @photo.img.url
                %li= 'Other versions:'
                %ul
                  - Paperclip::AttachmentRegistry.definitions_for(SemiStatic::Photo)[:img][:styles].keys.each do |s|
                    %li= link_to @photo.img.url(s), @photo.img.url(s)
            - else
              No image is currently loaded
          .row
            .col-md-6.mt-3
              - if @photo.img.present?
                = image_tag(@photo.img.url(:bar), :title => @photo.title, :size => '210x', :class => 'img-fluid', :id => 'semi_static_image_for_upload')
              - else
                = image_tag('no-image-loaded.jpg', :title => 'No image', :class => 'img-fluid', :id => 'semi_static_image_for_upload')
    
    
            .col-md-6.mt-3
              .stacked-input-group
                %span.infomarker{:data => {:marker => :loaded_image}}
                = f.label :img, 'Image', :class => 'input-group-text'
                = f.file_field :img, :class => 'form-control'
    
          .row
            .col-md-12
              = labeled_textfield(f, :description, 'Caption')
              = labeled_selectbox(f, :entry_id, options_for_select(@entries.collect{|e| [entry_title_or_id(e), e.id]}.prepend(['- None -', nil]), @photo.entry_id), 'Use in Entry')
              = labeled_selectbox(f, :locale, options_for_select(I18n.available_locales.collect{|l| [l, l]}, @photo.locale))
    .col-md-4
      .tile
        .tile-title
          %h5 Position
        .tile-body
          = labeled_textfield(f, :position)
          #entry_gallery_position{:style => 'display: none;'}
            .infobox#gallery_control_settings
              %h4= 'Gallery Control settings'
              %p
                = 'If you want your image to display as a thumbnail at the bottom of your entry, then you '
                = 'link the photo to the main entry ie.'
                %b not
                = 'linked to a merged entry. Any photos set to display'
                = 'as  thunbnails and then linked to a merged entry will NOT be display as thumbnails at all'
              %p
                = 'If the'
                %em= 'Entry gallery position'
                = 'of your photo is'
                %b= 'main,'
                = 'then the photo WILL be displayed if it is attached to a merged entry'
          
            = labeled_selectbox(f, :gallery_control, options_for_select(SemiStatic::Photo::GALLERY_SYM.collect{|k,v| [k.to_s.humanize, v]}, @photo.gallery_control.to_i), 'Entry position', :gallery_control_settings)
  
          %fieldset
            .infobox#photo_hidden
              %h4= 'Hidden Photos'
              %p
                = 'If you check this box then the photo will not be displayed in any public gallery on the website, though it will still be displayed'
                = 'if inside a public Entry that you have set it to be used in or on the home page if that box is checked'
            = labeled_checkbox(f, :hidden, nil, :photo_hidden)
            = labeled_checkbox(f, :home_page)
      .tile
        .tile-title
          %h5 Gallery
        .tile-body
          = labeled_selectbox(f, :gallery_id, options_for_select(SemiStatic::Gallery.all.collect{|g| [g.title, g.id]}.prepend(['- None -', nil]), @photo.gallery_id))
      .tile
        .tile-title
          %h5 Behaviour
        .tile-body
          .infobox#popup_control
            %h4= 'Popup'
            %p
              = 'If checked, then the system will do a high speed AJAX request to load a high definition'
              = 'copy of the image into a popup window. The size of this window will potentially be up to'
              = '50% of the width and height (25% of the area) of the origional image that you loaded. You'
              = 'must therefore be careful to load reasonalbly sizes images, ie. no 20Mbyte 10000px wide'
              = 'images from high defination cameras, unless you scale them before loading to the system'
            %p
              = 'If the system detects that you have a high definition (high DPI, double density or retina)'
              = 'screen, then the system will load a highly compressed image into the pop up and set it to'
              = 'display in double density. This is a very efficient and very effective way of showing high'
              = 'resolution images'
          = labeled_checkbox(f, :popup, 'Pop-up of larger image', :popup_control)
  .row
    .col-md-12
      .tile
        .tile-body
          = f.submit 'Save', :class => 'btn btn-danger btn-block'
