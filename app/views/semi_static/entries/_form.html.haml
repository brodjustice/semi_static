- content_for :ujs do
  :javascript
    function load_banner_preview(b_id){
        $.ajax({
          url: "/banners/" + b_id,
          dataType: 'script'
        });

    };

    $(document).ready(function() {
      $('#entry_body').jqte();
      $( "#entry_banner_id" ).change(function() {
        load_banner_preview($('#entry_banner_id').val());
      });
      if (!$('#entry_side_bar').prop('checked')){
        $('#side_bar_options').hide();
      }
      $('#entry_side_bar').change(function() {
        if($('#entry_side_bar').prop('checked')) {
          $('#side_bar_options').show();
        } else {
          $('#side_bar_options').hide();
        }
      });
      if ($('#entry_partial').val() == 'none'){
        $('#entry_position_select').hide();
      }
      $('#entry_partial').change(function() {
        if($('#entry_partial').val() == 'none') {
          $('#entry_position_select').hide();
        } else {
          $('#entry_position_select').show();
        }
      });
    });

= form_for @entry do |f|
  - if @entry.errors.any?
    #error_explanation
      %h2= "#{pluralize(@entry.errors.count, "error")} prohibited this entry from being saved:"
      %ul
        - @entry.errors.full_messages.each do |msg|
          %li= msg

  %fieldset
    = f.label :title
    %br/
    = f.text_field :title
  %fieldset
    = f.label :home_page
    = f.check_box :home_page
    = f.label :news_item
    = f.check_box :news_item
    = f.label :image_in_news
    = f.check_box :image_in_news
  %fieldset
    #selected_banner
      - if @entry.banner.present?
        = render :partial => 'semi_static/banners/show', :locals => {:banner => @entry.banner}
    = f.label :banner
    = f.select :banner_id, options_for_select(SemiStatic::Banner.all.collect{|b| [b.name, b.id]}.prepend(["- None -", 'none']), @entry.banner_id)
  %fieldset
    = f.label :partial, 'Custom view'
    = f.select :partial, options_for_select(SemiStatic::Engine.config.open_partials.collect{|k, v| [k, k]}.prepend(["- None -", 'none']), @entry.partial)
    %span#entry_position_select
      = f.label :entry_position
      = f.select :entry_position, options_for_select(SemiStatic::Entry::DISPLAY_ENTRY_SYM, @entry.entry_position)
  %fieldset
    = f.label :position
    = f.text_field :position
  %fieldset
    = f.label :tag_id
    %br
    = f.select :tag_id, options_for_select(SemiStatic::Tag.all.collect{|t| [t.name, t.id]}, @entry.tag_id)
  %fieldset
    = f.label :body
    %br/
    = f.text_area :body
  %fieldset
    = f.label :summary
    %br/
    = f.text_area :summary, :rows => '8'
    %br/
    = f.label :summary_length, 'Optimal summary length'
    %br/
    = f.text_field :summary_length

  %fieldset.entry
    - if @entry.img.present?
      = image_tag(@entry.img.url(:panel), :title => @entry.title, :class => 'ri')
      %br/
    = f.label :img, 'Image (optional, will be resized to max 319px with)'
    %br/
    = f.file_field :img
  %fieldset
    = f.label :doc, 'Document for downloading (optional)'
    %br/
    = f.file_field :doc
    %br/
    = f.label :doc_description, 'Document description (optional)'
    %br/
    = f.text_field :doc_description
  %fieldset
    = f.label :side_bar
    = f.check_box :side_bar
    %fieldset#side_bar_options
      = f.label :side_bar_news, 'News'
      = f.check_box :side_bar_news
      = f.label :side_bar_social, 'Social links'
      = f.check_box :side_bar_social
      = f.label :side_bar_search, 'Search'
      = f.check_box :side_bar_search

  %fieldset
    = f.label :locale
    = f.select :locale, options_for_select(I18n.available_locales.collect{|l| [l, l]}, @entry.locale)
    = f.label :style_class
    = f.select :style_class, options_for_select(SemiStatic::EntriesHelper::STYLE_CLASSES.collect{|sc| [sc, sc]}, @entry.style_class)
  %fieldset
    = f.label :background_colour, 'Background CSS colors: black, yellow, #5f78c0, etc'
    = f.text_field :background_colour
    %br/
    = f.label :header_colour, 'Header CSS colors: black, yellow, #5f78c0, etc'
    = f.text_field :header_colour
    -# %br/
    -# = f.label :colour, 'Text CSS colors: black, yellow, #5f78c0, etc'
    -# = f.text_field :colour

  .actions
    = f.submit 'Save'
