- content_for :ujs do
  :javascript
    function load_banner_preview(b_id){
        $.ajax({
          url: "/banners/" + b_id,
          dataType: 'script'
        });

    };
    function check_icon_in_menu(){
      if($('#semi_static_tag_icon_in_menu').prop('checked')) {
        $('#icon_in_menu_options').show();
      } else {
        $('#icon_in_menu_options').hide();
      }
    }
    function check_menu(){
      if($('#semi_static_tag_menu').prop('checked')) {
        $('#target_options').show();
      } else {
        $('#target_options').hide();
      }
    }
    function check_side_bar(){
      if($('#tag_side_bar').prop('checked')) {
        $('#side_bar_options').show();
      } else {
        $('#side_bar_options').hide();
      }
    }
    function check_tag_line(){
      if($('#tag_banner_id').val() == 'none') {
        $('#tag_line_override').hide();
      } else {
        $('#tag_line_override').show();
      }
    }


    $(document).ready(function() {
      $( "#tag_banner_id" ).change(function() {
        check_tag_line();
        load_banner_preview($('#tag_banner_id').val());
      });

      check_icon_in_menu();
      $("#semi_static_tag_icon_in_menu").change(function() { check_icon_in_menu(); });

      check_menu();
      $("#semi_static_tag_menu" ).change(function() {
        check_menu();
      });

      check_tag_line();
      if ($('#tag_partial').val() == 'none'){
        $('#entry_position_select').hide();
      }
      $('#tag_partial').change(function() {
        var params = {'cmd':{'partial_description': $('#tag_partial').val()}}
        $.ajax({url: "#{system_path()}", data: params, type: 'PUT', dataType: 'script'});
        if($('#tag_partial').val() == 'none') {
          $('#entry_position_select').hide();
        } else {
          $('#entry_position_select').show();
        }
      });
      $('#tag_partial').trigger('change');
    });

= form_for @tag do |f|
  - if @tag.errors.any?
    .row
      .col-md-12
        .tile
          #error_explanation
            %h2= "#{pluralize(@tag.errors.count, "error")} prohibited this tag from being saved:"
            %ul
              - @tag.errors.full_messages.each do |msg|
                %li= msg

  .row
    .col-md-8
      .tile
        .tile-title
          %h5
            %span.app-menu__icon.fa.fa-hierarchy.invert
            %span Configuration
        .tile-body
          .input-group
            .input-group-prepend
              = f.label :name, :class => 'input-group-text'
            = f.text_field :name, :class => 'form-control mt-2'
          .input-group
            - if SemiStatic::Engine.config.try('subscribers_model')
              = f.check_box :subscriber
              = f.label :subscriber, 'Subscriber only content'
              %br/
            = f.check_box :admin_only
            = f.label :admin_only, 'Admin and only content (eg. content not public)'
          .input-group.mb-6
            .input-group-prepend
              = f.label :sidebar_title, :class => 'input-group-text'
            = f.text_field :sidebar_title, :class => 'form-control mt-2'
          .input-group
            #selected_banner
              - if @tag.banner.present?
                = render :partial => 'semi_static/banners/show', :locals => {:banner => @tag.banner}
            .input-group-prepend
              = f.label :banner, :class => 'input-group-text'
            = f.select :banner_id, options_for_select(SemiStatic::Banner.all.collect{|b| [b.name, b.id]}.prepend(["- None -", 'none']), @tag.banner_id), {}, {:class => 'form-control mt-2'}
          .input-group
            #tag_line_override{:style => 'display: none'}
              = f.label :tag_line, 'Tag line override (optional)'
              %br/
              = f.text_field :tag_line
        
        
          .row
            .col-md-8
              .infobox.wide#partial_description
                = render :partial => 'semi_static/system/partial_description', :object => @tag
              = labeled_selectbox f, :partial, options_for_select(SemiStatic::Engine.config.open_partials.collect{|k, v| [k, k]}.prepend(["- None -", 'none']), @tag.partial), 'Custom view', :partial_description
            .col-md-4#entry_position_select
              = labeled_selectbox f, :entry_position, options_for_select(SemiStatic::Entry::DISPLAY_ENTRY_SYM, @tag.entry_position)
        
          .row
            .col-md-8
              = labeled_checkbox f, :menu, 'Show in menu'
              #target_options
                = labeled_selectbox f, :target_tag_id, options_for_select(SemiStatic::Tag.all.collect{|t| [t.name, t.id]}.prepend(['- None -', nil]), @tag.target_tag_id)
                .input-group
                  .input-group-prepend
                    = f.label :target_name, 'Target name (optional)', :class => 'input-group-text'
                  = f.text_field :target_name, :class => 'form-control mt-2'
              - if @tag.icon.present?
                .img_field
                  = image_tag(@tag.icon.url(:big))
              = labeled_selectbox f, :predefined_class, options_for_select(predefined_tags.keys.collect{|k| [k, k]}.prepend(["- None -", nil]), @tag.predefined_class), 'Predefined Tag'
              = labeled_selectbox f, :locale, options_for_select(I18n.available_locales.collect{|l| [l, l]}, @tag.locale)
            .col-md-4
              = labeled_checkbox f, :icon_in_menu
              #icon_in_menu_options
                .stacked-input-group
                  = f.label :icon, :class => 'input-group-text'
                  = f.file_field :icon, :class => 'form-control'
                = labeled_checkbox f, :icon_resize, 'Resize icon'
                = labeled_checkbox f, :icon_delete, 'Delete icon'
          .row.mt-2
            .col-md-8
              .input-group
                .input-group-prepend
                  - if @tag.position == 0
                    = f.label :position, 'Position 0: Icon sprite file must be 100px x 500px png with 5 icons', :class => 'input-group-text'
                  - else
                    = f.label :position, 'Position: Set to 0 to enable the sprites option', :class => 'input-group-text'
                = f.text_field :position, :class => 'form-control mt-2'
              .input-group
                .input-group-prepend
                  = f.label :max_entries_on_index_page, :class => 'input-group-text'
                = f.text_field :max_entries_on_index_page, :class => 'form-control mt-2'
            .col-md-4
              .input-group{:title => 'CSS colors: black, yellow, #5f78c0, etc'}
                .input-group-prepend
                  = f.label :colour, :class => 'input-group-text'
                = f.text_field :colour, :class => 'form-control mt-2'
        
    .col-md-4
      .tile
        .tile-body
          .tile-title
            %h5
              %span.app-menu__icon.fa.fa-sidebar.invert
              %span Side bar
          .tile-body
            = f.label :side_bar, 'Enable side bar'
            = f.check_box :side_bar
            %fieldset#side_bar_options
              = labeled_selectbox f, :sidebar_id, options_for_select(SemiStatic::Sidebar.all.collect{|s| [s.title.blank? ? "##{s.id.to_s}" : s.title, s.id]}.prepend(["- None -", nil]), @tag.sidebar_id)
              %br/
              = f.label :side_bar_news, 'News'
              = f.check_box :side_bar_news
              = f.label :side_bar_social, 'Social links'
              = f.check_box :side_bar_social
              = f.label :side_bar_search, 'Search'
              = f.check_box :side_bar_search
            = labeled_selectbox f, :side_bar_tag_id, options_for_select(SemiStatic::Tag.locale(@tag.locale).collect{|t| [t.name, t.id]}.prepend(["- None -", nil]), @tag.side_bar_tag_id), 'Tag for sidebar'

  
      .tile
        .tile-body
          .tile-title
            %h5
              %span.app-menu__icon.fa.fa-hierarchy.invert
              %span Tag Selection
          .tile-body
            .infobox.wide#entry_as_index_info
              %h3 Use Entry as Tag content
              %p
                If you select an entry here, then that entry content will displayed instead of the automatically constructed index page for this Tag.
              %p
                If you select an Entry that is part of this Tag then you will by default have the same Entry listed in the sidebar menu and the Entry page itself will be the canonical page.
              %p
                If select an Entry then then most fields on this page, eg. 'Max entries on index page, CSS colors, etc', will have no effect. The SEO setting will also not be taken from here, but from the selected Entry SEO settings. An alternate way to achieve a similar effect but will be to have only one Entry for this Tag and set the 'link_to_tag' attribute, this will then mean that SEO settings will be taken from the this Tag.
            = labeled_selectbox f, :use_entry_as_index_id, options_for_select(SemiStatic::Entry.unmerged.locale(@tag.locale).reorder(:title).collect{|e| [entry_title_or_id(e), e.id]}.prepend(['- None -', nil]), @tag.use_entry_as_index_id), 'Entry as Tag index', :entry_as_index_info
          
      .tile
        .tile-body
          .tile-title-w-btn
            %h5
              %span.app-menu__icon.fa.fa-attrs.invert
              Attributes

            - unless @tag.new_record?
              = link_to new_tag_page_attr_path(@tag), :class => 'btn btn-primary', :remote => true do
                %span.app-menu__icon.fa.fa-attrs
                %span New attribute

          .tile-body
            - if @tag.page_attrs.present?
              %table.table.sortable.table-bordered.table-hover
                %thead
                  %tr
                    %th='Key'
                    %th='Value'
                    %th
                %tbody
                  - @tag.page_attrs.each do |a|
                    %tr
                      %td= link_to a.attr_key, edit_polymorphic_path([@tag, a]), :remote => :true
                      %td= a.attr_value
                      %td= link_to image_tag("bin.png"), entry_page_attr_path(@tag, a), :method => :delete


      .tile
        .tile-body
          .tile-title
            %h5
              %span.app-menu__icon.fa.fa-settings.invert
              %span Advanced Settings
          .tile-body
            .infobox.wide#context_url_info
              %h3 Generate context URL's
              %p
                Normally entries inside a tag have a url of this form
              %pre
                http://mydomain.com/entries/56-discounts-for-volume-users
              %p
                But if context_urls are set for the tag them the tag name will be used in the URL. So that if the tag is called 'pricing', then the URL will now have this form:
              %pre
                http://mydomain.com/pricing/56-discounts-for-volume-users
              %p
                IMPORTANT #1: Context urls are only generated after the website application restart.
              %p
                IMPORTANT #2: If you use context URL's, then you need to make sure that the URLS do not clash, eg. if your tag is called 'Site' and you enable context urls then the generated URL 'http://mydomain.com/site/56-discounts-for-volume-users' my clash with the main application
          
            %span.infomarker
            = f.label :context_url
            = f.check_box :context_url
          %fieldset
            .section.group
              .col.span_1_of_1
                = f.label :layout_select, 'Rails level layout for this page'
                = f.select :layout_select, options_for_select(General::LAYOUTS.invert.collect{|k, v| [k, v]}, @tag.layout_select)
        
  .row
    .col-md-12
      .tile
        .tile-body
          = f.submit 'Save', :class => 'btn btn-danger btn-block'
